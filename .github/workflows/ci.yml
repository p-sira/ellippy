name: EllipPy CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Build package
      run: |
        uv run maturin develop --release
    
    - name: Run tests
      run: |
        uv run pytest python/tests/ -v
    
    - name: Run linting
      run: |
        uv run ruff check python/
        uv run ruff format --check python/

  docs:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Build package
      run: |
        uv run maturin develop --release
    
    - name: Clone figures from p-sira/ellip
      run: |
        # Clone the ellip repository to get fresh figures
        git clone https://github.com/p-sira/ellip.git /tmp/ellip
        
        # Copy figures to the documentation static directory
        mkdir -p docs/source/_static/figures
        cp -r /tmp/ellip/docs/source/_static/figures/* docs/source/_static/figures/ || true
        
        # Clean up
        rm -rf /tmp/ellip
